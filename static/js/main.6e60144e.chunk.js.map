{"version":3,"sources":["App.js","index.js"],"names":["myIcon","L","icon","iconUrl","iconSize","iconAnchor","App","state","lat","lng","zoom","getPosition","axios","get","then","response","data","iss_position","longitude","latitude","setState","this","setInterval","console","log","position","className","Map","center","TileLayer","attribution","url","Marker","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VAMMA,EAASC,IAAEC,KAAK,CACrBC,QAAS,sIACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAgDHC,E,4MA3CdC,MAAQ,CACPC,IAAK,GACLC,IAAK,GACLC,KAAM,G,EASPC,YAAc,WACbC,IAAMC,IAAI,2CACTC,MAAK,SAACC,GAAc,IAAD,EACWA,EAASC,KAAKC,aAArCC,EADY,EACZA,UAAWC,EADC,EACDA,SAClB,EAAKC,SAAS,CAACX,IAAKS,EACdV,IAAKW,Q,kEAVZE,KAAKV,cACLW,YAAYD,KAAKV,YAAa,KAC9BY,QAAQC,IAAI,c,+BAaZ,IAAMC,EAAW,CAACJ,KAAKd,MAAMC,IAAKa,KAAKd,MAAME,KAC7C,OACC,yBAAKiB,UAAU,OACd,4EACA,0CAAgBL,KAAKd,MAAME,KAC3B,yCAAeY,KAAKd,MAAMC,KACvB,kBAACmB,EAAA,EAAD,CAAKD,UAAU,MAAME,OAAQH,EAAUf,KAAMW,KAAKd,MAAMG,MACpD,kBAACmB,EAAA,EAAD,CACLC,YAAY,0EACZC,IAAI,uDAEL,kBAACC,EAAA,EAAD,CAAQP,SAAUA,EAAUvB,KAAMF,U,GAlCrBiC,IAAMC,W,MCRxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6e60144e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport L from 'leaflet';\nimport {Map, TileLayer, Marker} from 'react-leaflet';\nimport axios from 'axios';\n\nconst myIcon = L.icon({\n\ticonUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d0/International_Space_Station.svg/200px-International_Space_Station.svg.png',\n\ticonSize: [50, 32],\n\ticonAnchor: [25, 16],\n})\n\n\nclass App extends React.Component{\n\tstate = {\n\t\tlat: \"\",\n\t\tlng: \"\",\n\t\tzoom: 3,\n\t}\n\t\n\tcomponentDidMount(){\n\t\tthis.getPosition();\n\t\tsetInterval(this.getPosition ,5000)\t\n\t\tconsole.log(\"New Data\");\n\t};\n\n\tgetPosition = () =>{\n\t\taxios.get(\"http://api.open-notify.org/iss-now.json\")\n\t\t.then((response) => {\n\t\t\tconst {longitude, latitude} = response.data.iss_position;\n\t\t\tthis.setState({lng: longitude,\n\t\t\t\t\t\t   lat: latitude})\n\t\t})\t\n\t}\n\n\trender(){\n\t\tconst position = [this.state.lat, this.state.lng]\n\t\treturn(\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>International Space Station is currently at:</h1>\n\t\t\t\t<h3>Longitude: {this.state.lng}</h3>\n\t\t\t\t<h3>Latitude: {this.state.lat}</h3>\n\t\t\t    <Map className=\"map\" center={position} zoom={this.state.zoom}>\n        \t\t\t<TileLayer\n\t\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Marker position={position} icon={myIcon}>\n\n\t\t\t\t\t</Marker>\n\t\t\t\t</Map>\n\t\t\t</div>\n\t\t)\n\t}\n\t\t\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'leaflet/dist/leaflet.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}